name: PR Checks

on:
  pull_request:
    branches: [ main, master ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
      - 'LICENSE'
  workflow_dispatch:
    inputs:
      skip-tests:
        description: 'Skip tests'
        required: false
        type: boolean
        default: false
      run-full-suite:
        description: 'Run full test suite'
        required: false
        type: boolean
        default: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Determine which jobs to run based on file changes
  changes:
    runs-on: ubuntu-latest
    outputs:
      framework: ${{ steps.changes.outputs.framework }}
      tests: ${{ steps.changes.outputs.tests }}
      docker: ${{ steps.changes.outputs.docker }}
      workflows: ${{ steps.changes.outputs.workflows }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            framework:
              - 'atas-framework/**'
            tests:
              - 'atas-tests/**'
            docker:
              - 'docker/**'
              - 'Dockerfile'
            workflows:
              - '.github/workflows/**'

  # Code Quality Checks
  code-quality:
    runs-on: ubuntu-latest
    needs: [changes]
    if: github.event.inputs.run-full-suite == 'true' || needs.changes.outputs.framework == 'true' || needs.changes.outputs.tests == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run code quality checks
        run: |
          mvn clean compile
          echo "Code quality checks completed"


  # Unit Tests with Matrix Strategy
  unit-tests:
    runs-on: ubuntu-latest
    needs: [changes]
    if: github.event.inputs.skip-tests != 'true' && (github.event.inputs.run-full-suite == 'true' || needs.changes.outputs.framework == 'true' || needs.changes.outputs.tests == 'true')
    strategy:
      fail-fast: false
      matrix:
        module: [atas-framework, atas-tests]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run unit tests for ${{ matrix.module }}
        run: |
          mvn clean test -pl ${{ matrix.module }} -Dtest="**/*Test" -DfailIfNoTests=false
          echo "Unit tests completed for ${{ matrix.module }}"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.module }}
          path: |
            ${{ matrix.module }}/target/surefire-reports/
            ${{ matrix.module }}/target/site/jacoco/
          retention-days: 7

  # Integration Tests
  integration-tests:
    runs-on: ubuntu-latest
    needs: [changes]
    if: github.event.inputs.skip-tests != 'true' && (github.event.inputs.run-full-suite == 'true' || needs.changes.outputs.framework == 'true')
    services:
      postgres:
        image: postgres:18
        env:
          POSTGRES_DB: atasdb
          POSTGRES_USER: atas
          POSTGRES_PASSWORD: ataspass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run integration tests
        run: |
          mvn clean test -Dtest="**/*IT" -DfailIfNoTests=false
          echo "Integration tests completed"

      - name: Upload integration test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: integration-test-results
          path: |
            **/target/surefire-reports/
            **/target/failsafe-reports/
          retention-days: 7


  # Docker Build Test
  docker-build-test:
    runs-on: ubuntu-latest
    needs: [changes]
    if: github.event.inputs.run-full-suite == 'true' || needs.changes.outputs.docker == 'true' || needs.changes.outputs.framework == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker run --rm -d --name test-container -p 8080:8080 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.number }}
          sleep 30
          curl -f http://localhost:8080/actuator/health || exit 1
          docker stop test-container
          echo "Docker image test completed successfully"

  # PR Summary
  pr-summary:
    runs-on: ubuntu-latest
    needs: [changes, code-quality, unit-tests, integration-tests, docker-build-test]
    if: always()
    steps:
      - name: PR Check Summary
        run: |
          echo "## 🔍 PR Check Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Changes detected:**" >> $GITHUB_STEP_SUMMARY
          echo "- Framework: ${{ needs.changes.outputs.framework }}" >> $GITHUB_STEP_SUMMARY
          echo "- Tests: ${{ needs.changes.outputs.tests }}" >> $GITHUB_STEP_SUMMARY
          echo "- Docker: ${{ needs.changes.outputs.docker }}" >> $GITHUB_STEP_SUMMARY
          echo "- Workflows: ${{ needs.changes.outputs.workflows }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Code Quality | ${{ needs.code-quality.result == 'success' && '✅ Passed' || needs.code-quality.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Unit Tests | ${{ needs.unit-tests.result == 'success' && '✅ Passed' || needs.unit-tests.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Integration Tests | ${{ needs.integration-tests.result == 'success' && '✅ Passed' || needs.integration-tests.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Docker Build | ${{ needs.docker-build-test.result == 'success' && '✅ Passed' || needs.docker-build-test.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Count successful jobs
          success_count=0
          total_count=0
          for job in code-quality unit-tests integration-tests docker-build-test; do
            if [[ "${{ needs[job].result }}" != "skipped" ]]; then
              total_count=$((total_count + 1))
              if [[ "${{ needs[job].result }}" == "success" ]]; then
                success_count=$((success_count + 1))
              fi
            fi
          done
          
          if [[ $success_count -eq $total_count && $total_count -gt 0 ]]; then
            echo "🎉 All checks passed! This PR is ready for review." >> $GITHUB_STEP_SUMMARY
          elif [[ $total_count -eq 0 ]]; then
            echo "ℹ️ No relevant changes detected. All checks were skipped." >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Some checks failed. Please review the results above." >> $GITHUB_STEP_SUMMARY
          fi
