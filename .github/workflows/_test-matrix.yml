name: Test Matrix

on:
  workflow_call:
    inputs:
      test-suite:
        description: 'Test suite to run'
        required: true
        type: string
      environment:
        description: 'Test environment'
        required: false
        type: string
        default: 'test'
      java-version:
        description: 'Java version to use'
        required: false
        type: string
        default: '21'
      browser-matrix:
        description: 'Browser matrix for UI tests'
        required: false
        type: string
        default: 'chromium,firefox,webkit'
    outputs:
      test-results:
        description: 'Test results summary'
        value: ${{ jobs.test-matrix.outputs.test-results }}

jobs:
  test-matrix:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - browser: chromium
            browser-name: Chromium
          - browser: firefox
            browser-name: Firefox
          - browser: webkit
            browser-name: WebKit
    services:
      postgres:
        image: postgres:18
        env:
          POSTGRES_DB: atasdb
          POSTGRES_USER: atas
          POSTGRES_PASSWORD: ataspass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Setup Makefile
        run: |
          chmod +x ./mvnw
          chmod +x Makefile

      - name: Install parent POM first
        run: |
          mvn clean install -N -DskipTests

      - name: Build framework first
        run: |
          make build

      - name: Install Playwright browsers
        run: |
          cd atas-framework
          mvn -q exec:java -Dexec.mainClass=com.microsoft.playwright.CLI -Dexec.args="install ${{ matrix.browser }}"

      - name: Run framework unit tests
        run: |
          echo "Running framework unit tests (H2-based)..."
          make test-unit

      - name: Run framework integration tests
        run: |
          echo "Running framework integration tests (PostgreSQL with Testcontainers)..."
          make test-integration

      - name: Run version consistency tests
        run: |
          echo "Running version consistency tests..."
          mvn test -pl atas-framework -Dtest="**/*VersionConsistencyTest"

      - name: Run production tests
        run: |
          echo "Running production tests (PostgreSQL-based)..."
          make test-production

      - name: Run test suite with ${{ matrix.browser-name }}
        run: |
          case "${{ inputs.test-suite }}" in
            "all")
              echo "Running all test suites..."
              # Note: The old test suites were removed, so we'll run the new structure
              echo "All tests completed via framework and production test layers"
              ;;
            "authentication-ui")
              echo "Authentication UI tests not available in new structure"
              echo "Use framework unit tests and production tests instead"
              ;;
            "authentication-api")
              echo "Authentication API tests not available in new structure"
              echo "Use framework unit tests and production tests instead"
              ;;
            "monitoring-ui")
              echo "Monitoring UI tests not available in new structure"
              echo "Use framework unit tests and production tests instead"
              ;;
            "monitoring-api")
              echo "Monitoring API tests not available in new structure"
              echo "Use framework unit tests and production tests instead"
              ;;
          esac

      - name: Generate Allure Report
        if: always()
        run: |
          mvn allure:report -pl atas-tests

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ inputs.test-suite }}-${{ matrix.browser }}-${{ inputs.environment }}
          path: |
            **/target/surefire-reports/
            **/target/allure-results/
            **/target/site/allure-maven-plugin/
          retention-days: 30

    outputs:
      test-results: ${{ job.status }}
