<?xml version="1.0" encoding="UTF-8"?>
<!--
  ATAS Test Implementations Module
  UI/API/DB tests built on top of the ATAS framework.
  Uses Playwright (Java), JUnit 5 (via Spring Boot starter), and Allure.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.atas</groupId>
    <artifactId>atas-monorepo</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>atas-tests</artifactId>
  <name>ATAS Test Implementations</name>
  <description>Concrete UI, API, and database tests built using the ATAS framework.</description>

  <dependencies>
    <!-- Depend on the core framework -->
    <dependency>
      <groupId>com.atas</groupId>
      <artifactId>atas-framework</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Playwright for Java (tests only) -->
    <dependency>
      <groupId>com.microsoft.playwright</groupId>
      <artifactId>playwright</artifactId>
      <version>${playwright.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Allure JUnit 5 integration (library) -->
    <dependency>
      <groupId>io.qameta.allure</groupId>
      <artifactId>allure-junit5</artifactId>
      <version>${allure.lib.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Spring Boot test starter brings JUnit Jupiter + Mockito, etc. -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Optional: newer AssertJ -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Lombok for tests (only if used in test sources) -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>

    <!-- H2 database for testing -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- JUnit Platform Suite for test suite organization -->
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Compile tests on the CLASSpath (avoid JPMS module path issues) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.14.1</version>
        <configuration>
          <release>21</release>
          <useModulePath>false</useModulePath>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <!-- Ensure JUnit 5 runs on classpath (no module path) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <useModulePath>false</useModulePath>
          <!-- Put results exactly where the Allure Maven plugin expects -->
          <systemPropertyVariables>
            <allure.results.directory>${project.build.directory}/allure-results</allure.results.directory>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <!-- Allure Maven plugin (version inherited from parent if defined) -->
      <plugin>
        <groupId>io.qameta.allure</groupId>
        <artifactId>allure-maven</artifactId>
      </plugin>

    </plugins>
  </build>

</project>
